#pragma checksum "\\Mac\Home\Documents\PROJECTS\DOTNETPROJECTS\TechnicalTest\Views\Persons\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0760f752b73da082e740c993dc113e909250ace8"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Persons_Index), @"mvc.1.0.view", @"/Views/Persons/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "\\Mac\Home\Documents\PROJECTS\DOTNETPROJECTS\TechnicalTest\Views\_ViewImports.cshtml"
using TechnicalTest;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "\\Mac\Home\Documents\PROJECTS\DOTNETPROJECTS\TechnicalTest\Views\_ViewImports.cshtml"
using TechnicalTest.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0760f752b73da082e740c993dc113e909250ace8", @"/Views/Persons/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d22bd7a0ebe33a81ebc47abdd98acecbf2f67c62", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Persons_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/sweetalertlocal/sweetalerts.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "TRUE", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "FALSE", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "M", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "F", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "\\Mac\Home\Documents\PROJECTS\DOTNETPROJECTS\TechnicalTest\Views\Persons\Index.cshtml"
  
    ViewBag.PageTitle = "Persons";
    Layout = "_DashboardLayout";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<script src=""https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.15.5/xlsx.full.min.js""></script>
<script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js"" type=""text/javascript""></script>
<script src=""https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"" type=""text/javascript""></script>
<link href=""https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css"" rel=""Stylesheet""
    type=""text/css"" />
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0760f752b73da082e740c993dc113e909250ace86183", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"


<div class=""page-content"" id=""viewDiv"">
    <div class=""container-fluid"">
        <div class=""row"">
            <div class=""col-12"">
                <div class=""page-title-box d-sm-flex align-items-center justify-content-between"">
                    <h4 class=""mb-sm-0"">Persons List</h4>
                    <div class=""page-title-right"">
                        <ol class=""breadcrumb m-0"">
                            <li class=""breadcrumb-item""><a>Persons</a></li>
                            <li class=""breadcrumb-item active""> List</li>
                        </ol>
                    </div>

                </div>
            </div>
        </div>

        <div class=""row"">
            <div class=""col-lg-12"">
                <div class=""card"" id=""invoiceList"">
                    <div class=""card-header border-0"">
                        <div class=""d-flex align-items-center"">
                            <h5 class=""card-title mb-0 flex-grow-1"">");
#nullable restore
#line 35 "\\Mac\Home\Documents\PROJECTS\DOTNETPROJECTS\TechnicalTest\Views\Persons\Index.cshtml"
                                                               Write(ViewBag.PageTitle);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h5>
                            <div class=""flex-shrink-0"">
                            </div>
                        </div>
                    </div>
                    <div class=""card-body bg-soft-light border border-dashed border-start-0 border-end-0"">
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0760f752b73da082e740c993dc113e909250ace88910", async() => {
                WriteLiteral(@"
                            <div class=""row g-3"">
                                <div class=""col-xxl-5 col-sm-12"">
                                    <div class=""search-box"">
                                        <label>Upload Persons</label>
                                        <input class=""form-control-file"" type=""file"" id=""fileUploader""
                                            name=""fileUploader"" accept="".xls, .xlsx,.csv"" />

                                    </div>
                                </div>
                                <!--end col-->
                                <div class=""col-xxl-3 col-sm-4"">
                                </div>
                                <!--end col-->
                                <div class=""col-xxl-3 col-sm-4"">

                                </div>
                                <!--end col-->

                                <div class=""col-xxl-1 col-sm-4"">

                                </div>
                   ");
                WriteLiteral("             <!--end col-->\r\n                            </div>\r\n                            <!--end row-->\r\n                        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                    </div>
                    <div class=""card-body"">
                        <div>
                            <div class=""table-responsive table-card"">
                                <table class=""table align-middle table-nowrap"" id=""invoiceTable"">
                                    <thead class=""text-muted"">
                                        <tr>

                                            <th class=""sort text-uppercase"" data-sort=""customer_name"">
                                                Identity
                                            </th>
                                            <th class=""text-uppercase"">Firstname</th>
                                            <th class=""text-uppercase"">Surname</th>
                                            <th class=""text-uppercase"">Age</th>
                                            <th class=""text-uppercase"">Sex</th>
                                            <th class=""text-uppercase"">Mobile</th>
     ");
            WriteLiteral(@"                                       <th class=""text-uppercase"">Active</th>
                                            <th class=""text-uppercase"">Action</th>
                                        </tr>
                                    </thead>

                                    <tbody class=""list form-check-all fileData"">

                                    </tbody>
                                </table>

                            </div>
                            <div class=""d-flex justify-content-end mt-3"">
                                <div class=""pagination-wrap hstack gap-2"">


                                </div>
                            </div>
                        </div>

                    </div>
                </div>

            </div>
        </div>

    </div>
</div>

<div class=""page-content"" id=""editDiv"">
    <div class=""container-fluid"">

        <div class=""row"">
            <div class=""col-12"">
                <div class=""page-title");
            WriteLiteral(@"-box d-sm-flex align-items-center justify-content-between"">
                    <h4 class=""mb-sm-0"">Persons Edit</h4>
                    <div class=""page-title-right"">
                        <ol class=""breadcrumb m-0"">
                            <li class=""breadcrumb-item""><a>Persons</a></li>
                            <li class=""breadcrumb-item active""> Edit</li>
                        </ol>
                    </div>

                </div>
            </div>
        </div>

        <div class=""row"">
            <div class=""col-lg-12"">
                <div class=""card"">

                    <div class=""card-body"">
                        <div class=""row"">
                            <div class=""col-lg-8"">
                                <div class=""card"">
                                    <div class=""card-body"">
                                        <div class=""row"">
                                            <div class=""mb-3"">
                                              ");
            WriteLiteral(@"  <label class=""form-label""> FIRST NAME</label>
                                                <input type=""text"" class=""form-control"" id=""firstName"" required>

                                            </div>
                                            <div class=""mb-3"">
                                                <label class=""form-label""> SURNAME</label>
                                                <input type=""text"" class=""form-control"" id=""surName"" required>

                                            </div>
                                            <div class=""mb-3"">
                                                <label class=""form-label"">AGE</label>
                                                <input type=""text"" class=""form-control"" id=""age"" required>

                                            </div>
                                             <div class=""mb-3"">
                                                <label class=""form-label"">STATUS</label>
                 ");
            WriteLiteral("                               <select id=\"statuss\" class=\"form-control\" required name=\"status\">\r\n                                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0760f752b73da082e740c993dc113e909250ace815844", async() => {
                WriteLiteral("TRUE");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0760f752b73da082e740c993dc113e909250ace817054", async() => {
                WriteLiteral("FALSE");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                </select>

                                            </div>
                                            <div class=""mb-3"">
                                                <label class=""form-label"">SEX</label>
                                                <select id=""sex"" class=""form-control"" required name=""sex"">
                                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0760f752b73da082e740c993dc113e909250ace818646", async() => {
                WriteLiteral("M");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0760f752b73da082e740c993dc113e909250ace819853", async() => {
                WriteLiteral("F");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                                </select>

                                            </div>
                                            <div class=""mb-3"">
                                                <label class=""form-label"">MOBILE</label>
                                                <input type=""text"" class=""form-control"" id=""mobile"" required>

                                            </div>
                                           

                                      

                                        <div class=""text-end mb-3"">
                                            <input type=""submit"" class=""btn btn-primary w-sm"" value=""Edit""
                                                onclick=""EditData()"">
                                            &nbsp;&nbsp;
                                            <a onclick=""ViewAllItem()"" class=""btn btn-info  w-sm"">Back to List</a>

                                        </div>
                             ");
            WriteLiteral(@"       </div>
                                </div>

                            </div>

                        </div>

                        <div>
                        </div>

                    </div>
                </div>

            </div>
        </div>

    </div>
</div>

<script>
    document.getElementById(""editDiv"").style.display = 'none';
    document.getElementById(""viewDiv"").style.display = 'block';
    function editItem(Identity) {
        var data = JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"");
        data = data.filter(function (obj) {
            return obj.Identity === Identity;
        });
        sessionStorage.setItem('IdentityToEdit', Identity.toString());
        document.getElementById(""firstName"").value = data[0].FirstName.toString();
        document.getElementById(""surName"").value = data[0].Surname.toString();
        document.getElementById(""age"").value = data[0].Age.toString();
        document.getElementById(""sex"").value = dat");
            WriteLiteral(@"a[0].Sex.toString().toUpperCase();
        document.getElementById(""mobile"").value = data[0].Mobile.toString();
        document.getElementById(""statuss"").value = data[0].Active===true?'TRUE':'FALSE';
        console.log(data[0].Active);
        document.getElementById(""editDiv"").style.display = 'block';
        document.getElementById(""viewDiv"").style.display = 'none';
    }
    function EditData() {
        var firstName = document.getElementById(""firstName"").value;
        var surName = document.getElementById(""surName"").value;
        var age = document.getElementById(""age"").value;
        var sexObj = document.getElementById(""sex"");
        var sex = sexObj.options[sexObj.selectedIndex].value;
        var mobile = document.getElementById(""mobile"").value;
        var statusObj = document.getElementById(""statuss"");
        var status = statusObj.options[statusObj.selectedIndex].value === 'TRUE'?true:false;
        if (firstName === undefined || firstName === null || firstName === '') {
   ");
            WriteLiteral(@"         errorAlert('First name is required');
            return;
        }
        if (surName === undefined || surName === null || surName === '') {
            errorAlert('Surname is required');
            return;
        }
        if (age === undefined || age === null || age === '' || isNaN(Number(age))) {
            errorAlert('Age is required and must be a valid age');
            return;
        }
        if (sex === undefined || sex === null || sex === '' || (sex.toLowerCase() !== 'm' && sex.toLowerCase() !== 'f')) {
            errorAlert('Sex is required and must be either M or F');
            return;
        }
        if (mobile === undefined || mobile === null || mobile === '' || isNaN(Number(mobile))) {
            errorAlert('Mobile no is required and must be a valid no');
            return;
        }
        if (status !== true && status !== false) {
            errorAlert('Status is required and must be true or false');
            return;
        }
        var data");
            WriteLiteral(@" = JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"");
        data = data.filter(function (obj) {
            return obj.Identity !== Number(sessionStorage.getItem('IdentityToEdit'))
        });
        var obj = {};
        obj.Identity = Number(sessionStorage.getItem('IdentityToEdit'));
        obj.Age = age;
        obj.FirstName = firstName;
        obj.Active = status;
        obj.Mobile = mobile;
        obj.Sex = sex;
        obj.Surname = surName;
        data.push(obj);
        if (data.length) {
            sessionStorage.setItem(""csvFileData"", JSON.stringify(data));
            var tr;
            $('.fileData').empty();
            //Append each row to html table
            for (var i = 0; i < JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"").length; i++) {
                tr = $('<tr/>');
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Identity + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionSto");
            WriteLiteral(@"rage.getItem(""csvFileData"") || ""[]"")[i].FirstName + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Surname + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Age + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Sex.toUpperCase() + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Mobile + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Active + ""</td>"");
                tr.append(""<td>"" + '<button  class=""btn btn-info"" onclick=""ViewItem(' + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Identity +
                    ')"">View</button> &nbsp;<button  class=""btn btn-warning"" onclick=""editItem(' + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Identity +
                    ')"">Edit</button> &");
            WriteLiteral(@"nbsp;<button  class=""btn btn-danger"" onclick=""deleteItem(' + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Identity +
                    ')"">Delete</button>' + ""</td>"");
                $('.fileData').append(tr);
            }
            okSuccess('Edit is successful!');
        } else {
            $('.fileData').empty();
            sessionStorage.removeItem('csvFileData');
        }

        document.getElementById(""editDiv"").style.display = 'none';
        document.getElementById(""viewDiv"").style.display = 'block';


    }
    function readCsVFile(evt) {
        showLoading();
        var selectedFile = evt.target.files[0];
        var reader = new FileReader();
        reader.onload = function (event) {
            var data = event.target.result;
            var workbook = XLSX.read(data, {
                type: 'binary'
            });
            workbook.SheetNames.forEach(function (sheetName) {
                var jsonArray = [];
                var XL_row_o");
            WriteLiteral(@"bject = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                var json_object = JSON.stringify(XL_row_object);
                jsonArray = JSON.parse(json_object);

                for (var i = 0; i < jsonArray.length; i++) {

                    if (jsonArray[i].Active !== true && jsonArray[i].Active !== false) {
                        errorAlert('Status is required and must be true or false for person with Identity ' + jsonArray[i].Identity);
                        return;
                    }
                    if (jsonArray[i].Age === undefined || jsonArray[i].Age === null || jsonArray[i].Age === '' || isNaN(Number(jsonArray[i].Age))) {
                        errorAlert('Age is required and must be a valid age for person with Identity ' + jsonArray[i].Identity);
                        return;
                    }
                    if (jsonArray[i].FirstName === undefined || jsonArray[i].FirstName === null || jsonArray[i].FirstName === '') {
             ");
            WriteLiteral(@"           errorAlert('First name is required for person with Identity ' + jsonArray[i].Identity);
                        return;
                    }
                    if (jsonArray[i].Surname === undefined || jsonArray[i].Surname === null || jsonArray[i].Surname === '') {
                        errorAlert('Surname is required for person with Identity ' + jsonArray[i].Identity);
                        return;
                    }
                    if (jsonArray[i].Mobile === undefined || jsonArray[i].Mobile === null || jsonArray[i].Mobile === '' || isNaN(Number(jsonArray[i].Mobile))) {
                        errorAlert('Mobile no is required and must be a valid no for person with Identity ' + jsonArray[i].Identity);
                        return;
                    }
                    if (jsonArray[i].Sex === undefined || jsonArray[i].Sex === null || jsonArray[i].Sex === '' || (jsonArray[i].Sex.toLowerCase() !== 'm' && jsonArray[i].Sex.toLowerCase() !== 'f')) {
                     ");
            WriteLiteral(@"   errorAlert('Sex is required and must be either M or F for person with Identity ' + jsonArray[i].Identity);
                        return;
                    }
                }
                var arrayOfData = [];
                if (JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"").length === 0) {
                    arrayOfData = jsonArray;
                }
                if (JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"").length > 0) {
                    arrayOfData = [...JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]""), ...jsonArray]
                }
                sessionStorage.setItem(""csvFileData"", JSON.stringify(arrayOfData));
                if (JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"").length > 0) {
                    var tr;
                    $('.fileData').empty();
                    //Append each row to html table
                    for (var i = 0; i < JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"").length; i++)");
            WriteLiteral(@" {
                        tr = $('<tr/>');
                                      tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Identity + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].FirstName + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Surname + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Age + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Sex.toUpperCase() + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Mobile + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Active + ""</td>"");
                        tr.append(""<td>"" + '<button  class=""btn btn-info"" onclick=""ViewItem(' + JSON.parse(sessionStorage.getItem(");
            WriteLiteral(@"""csvFileData"") || ""[]"")[i].Identity +
                            ')"">View</button> &nbsp;<button  class=""btn btn-warning"" onclick=""editItem(' + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Identity +
                            ')"">Edit</button> &nbsp;<button  class=""btn btn-danger"" onclick=""deleteItem(' + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Identity +
                            ')"">Delete</button>' + ""</td>"");
                        $('.fileData').append(tr);
                        okSuccess('Upload is successful!');
                        clearInput();
                    }
                } else {
                    $('.fileData').empty();
                    sessionStorage.removeItem('csvFileData');
                }

            });
        };

        reader.onerror = function (event) {
            alert(""File could not be read! Code "" + event.target.error.code);
        };

        reader.readAsBinaryString(selectedFile);
    }

    ");
            WriteLiteral(@"document.getElementById('fileUploader').addEventListener('change', readCsVFile);
</script>
<script>
    function clearInput() {
        document.getElementById('fileUploader').value = null;
    }
</script>
<script>
    function errorAlert(msg) {
        Swal.fire({
            title: 'Error Alert',
            text: msg,
            type: 'error',
            showCancelButton: true,
            showConfirmButton: false,
            cancelButtonColor: '#d33',
            allowOutsideClick: false,
            allowEscapeKey: false,
            allowEnterKey: false,
        });
        clearInput();
    }
</script>
<script>

    function ViewItem(Identity) {
        var data = JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"");
        data = data.filter(function (obj) {
            return obj.Identity === Identity;
        });

        if (data.length) {
            sessionStorage.setItem(""csvFileDataView"", JSON.stringify(data));
            var tr;
            $('.fileD");
            WriteLiteral(@"ata').empty();
            //Append each row to html table
            for (var i = 0; i < JSON.parse(sessionStorage.getItem(""csvFileDataView"") || ""[]"").length; i++) {
                tr = $('<tr/>');
                               tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Identity + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].FirstName + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Surname + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Age + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Sex.toUpperCase() + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Mobile + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i");
            WriteLiteral(@"].Active + ""</td>"");
                tr.append(""<td>"" + '<button  class=""btn btn-primary"" onclick=""ViewAllItem()"">View All</button> ' + ""</td>"");
                $('.fileData').append(tr);
            }
        } else {
            $('.fileData').empty();
            sessionStorage.removeItem('csvFileDataView');
        }

    }

    function ViewAllItem() {
        document.getElementById(""editDiv"").style.display = 'none';
        document.getElementById(""viewDiv"").style.display = 'block';
        var data = JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"");
        if (data.length) {
            sessionStorage.setItem(""csvFileData"", JSON.stringify(data));
            var tr;
            $('.fileData').empty();
            //Append each row to html table
            for (var i = 0; i < JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"").length; i++) {
                tr = $('<tr/>');
                              tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFil");
            WriteLiteral(@"eData"") || ""[]"")[i].Identity + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].FirstName + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Surname + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Age + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Sex.toUpperCase() + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Mobile + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Active + ""</td>"");
                tr.append(""<td>"" + '<button  class=""btn btn-info"" onclick=""ViewItem(' + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Identity +
                    ')"">View</button> &nbsp;<button  class=""btn btn-warning"" onclick=""editItem(' + JSON.parse(ses");
            WriteLiteral(@"sionStorage.getItem(""csvFileData"") || ""[]"")[i].Identity +
                    ')"">Edit</button> &nbsp;<button  class=""btn btn-danger"" onclick=""deleteItem(' + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Identity +
                    ')"">Delete</button>' + ""</td>"");
                $('.fileData').append(tr);
            }
        } else {
            $('.fileData').empty();
            sessionStorage.removeItem('csvFileData');
        }
    }
    function deleteFinally() {
        var data = JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"");
        data = data.filter(function (obj) {
            return obj.Identity !== Number(sessionStorage.getItem('Identity'))
        });

        if (data.length) {
            sessionStorage.setItem(""csvFileData"", JSON.stringify(data));
            var tr;
            $('.fileData').empty();
            //Append each row to html table
            for (var i = 0; i < JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"").lengt");
            WriteLiteral(@"h; i++) {
                tr = $('<tr/>');
                              tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Identity + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].FirstName + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Surname + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Age + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Sex.toUpperCase() + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Mobile + ""</td>"");
                tr.append(""<td>"" + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Active + ""</td>"");
                tr.append(""<td>"" + '<button  class=""btn btn-info"" onclick=""ViewItem(' + JSON.parse(sessionStorage.getItem(""csvFileData"") ||");
            WriteLiteral(@" ""[]"")[i].Identity +
                    ')"">View</button> &nbsp;<button  class=""btn btn-warning"" onclick=""editItem(' + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Identity +
                    ')"">Edit</button> &nbsp;<button  class=""btn btn-danger"" onclick=""deleteItem(' + JSON.parse(sessionStorage.getItem(""csvFileData"") || ""[]"")[i].Identity +
                    ')"">Delete</button>' + ""</td>"");
                $('.fileData').append(tr);
                okSuccess('Delete is successful!');
            }
        } else {
            $('.fileData').empty();
            sessionStorage.removeItem('csvFileData');
        }
    }
    function deleteItem(Identity) {
        sessionStorage.setItem('Identity', Identity.toString());
        Swal.fire({
            title: 'Delete Person',
            text: 'Are you sure ?',
            type: 'info',
            showCancelButton: true,
            showConfirmButton: true,
            confirmButtonColor: '#3085d6',
            cancelB");
            WriteLiteral(@"uttonColor: '#d33',
            confirmButtonText: 'Ok',
            allowOutsideClick: false,
            allowEscapeKey: false,
            allowEnterKey: false,
        }).then((result) => {
            if (result.value) {
                deleteFinally();
            }
        })
    }

    function showLoading() {
        Swal.fire({
            title: ' ',
            text: 'Please wait ... ',
            type: '',
            showCancelButton: false,
            showConfirmButton: false,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Ok',
            allowOutsideClick: false,
            allowEscapeKey: false,
            allowEnterKey: false
        });
    }

    function okSuccess(text) {
        Swal.fire({
            title: 'Upload Status',
            text: text,
            type: 'success',
            showCancelButton: true,
            showConfirmButton: true,
            confirmButtonColor: '");
            WriteLiteral("#3085d6\',\r\n            cancelButtonColor: \'#d33\',\r\n            confirmButtonText: \'Ok\',\r\n            allowOutsideClick: false,\r\n            allowEscapeKey: false,\r\n            allowEnterKey: false,\r\n        });\r\n    }\r\n</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
